package com.example.confessionapp.ui.activities

import android.content.Intent
import android.os.Bundle
import android.view.View
import android.widget.Toast
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import com.example.confessionapp.databinding.ActivityConfessorDashboardBinding
import com.example.confessionapp.ui.viewmodels.ConfessorDashboardViewModel
import com.example.confessionapp.ui.viewmodels.PriestFindingResult
// Placeholder for ConfessionActivity, will be created in next step
// import com.example.confessionapp.ui.activities.ConfessionActivity
// Placeholder for GooglePayDonationActivity, will be created in a later step
// import com.example.confessionapp.ui.activities.GooglePayDonationActivity


class ConfessorDashboardActivity : AppCompatActivity() {

    private lateinit var binding: ActivityConfessorDashboardBinding
    private val viewModel: ConfessorDashboardViewModel by viewModels()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityConfessorDashboardBinding.inflate(layoutInflater)
        setContentView(binding.root)

        setupObservers()
        setupClickListeners()
    }

    private fun setupObservers() {
        viewModel.isLoading.observe(this) { isLoading ->
            binding.progressBarConfessorDashboard.visibility = if (isLoading) View.VISIBLE else View.GONE
        }

        viewModel.priestFindingState.observe(this) { result ->
            when (result) {
                is PriestFindingResult.Searching -> {
                    binding.tvPriestSearchStatus.text = "Searching for available priests..."
                    binding.tvPriestSearchStatus.visibility = View.VISIBLE
                    binding.btnFindPriest.isEnabled = false
                    binding.progressBarConfessorDashboard.visibility = View.VISIBLE
                }
                is PriestFindingResult.PriestFound -> {
                    binding.tvPriestSearchStatus.text = "Priest found: ${result.priest.displayName}. Connecting..."
                    binding.tvPriestSearchStatus.visibility = View.VISIBLE
                    binding.btnFindPriest.isEnabled = true
                    binding.progressBarConfessorDashboard.visibility = View.GONE
                    Toast.makeText(this, "Connecting to priest ${result.priest.displayName}", Toast.LENGTH_LONG).show()

                    val intent = Intent(this, ConfessionActivity::class.java)
                    intent.putExtra(ConfessionActivity.EXTRA_PRIEST_ID, result.priest.uid)
                    intent.putExtra(ConfessionActivity.EXTRA_PRIEST_DISPLAY_NAME, result.priest.displayName)
                    // Confessor is the caller, generates room ID in ConfessionActivity or gets it from ViewModel
                    intent.putExtra(ConfessionActivity.EXTRA_IS_CALLER, true)
                    // Room ID will be generated by the caller's ConfessionActivity/ViewModel
                    // If pre-negotiated, it would be passed here.
                    startActivity(intent)
                }
                is PriestFindingResult.NoPriestsAvailable -> {
                    binding.tvPriestSearchStatus.text = "No priests are currently available. Please try again later."
                    binding.tvPriestSearchStatus.visibility = View.VISIBLE
                    binding.btnFindPriest.isEnabled = true
                    binding.progressBarConfessorDashboard.visibility = View.GONE
                }
                is PriestFindingResult.Error -> {
                    binding.tvPriestSearchStatus.text = "Error finding priest: ${result.message}"
                    binding.tvPriestSearchStatus.visibility = View.VISIBLE
                    binding.btnFindPriest.isEnabled = true
                    binding.progressBarConfessorDashboard.visibility = View.GONE
                }
            }
        }
    }

    private fun setupClickListeners() {
        binding.btnFindPriest.setOnClickListener {
            viewModel.findAvailablePriest()
        }

        binding.btnMakeDonation.setOnClickListener {
            val intent = Intent(this, GooglePayDonationActivity::class.java)
            startActivity(intent)
        }
    }
}
